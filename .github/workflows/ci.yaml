name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  container:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.17'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test with code coverage
        run: go test ./... -race -covermode=atomic -coverprofile=coverage.txt

      - name: Build binaries and Docker image with GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --snapshot --skip-publish

      - name: Make example directory writable for all users
        run: chmod -R o+w example

      - name: Run the Docker image without flags
        run: |
          cd example
          docker run \
            --workdir /workspace \
            --volume "$(pwd)":/workspace \
            ghcr.io/patrickhoefler/dockerfilegraph:0.0.0

      - name: Run the Docker image with --help
        run: |
          cd example
          docker run \
            --workdir /workspace \
            --volume "$(pwd)":/workspace \
            ghcr.io/patrickhoefler/dockerfilegraph:0.0.0 \
            --help

      - name: Run the Docker image with -o pdf
        run: |
          cd example
          docker run \
            --workdir /workspace \
            --volume "$(pwd)":/workspace \
            ghcr.io/patrickhoefler/dockerfilegraph:0.0.0 \
            -o pdf

      - name: Run the Docker image with -o png
        run: |
          cd example
          docker run \
            --workdir /workspace \
            --volume "$(pwd)":/workspace \
            ghcr.io/patrickhoefler/dockerfilegraph:0.0.0 \
            -o png

      - name: Run the Docker image with --output png --dpi 200
        run: |
          cd example
          docker run \
            --workdir /workspace \
            --volume "$(pwd)":/workspace \
            ghcr.io/patrickhoefler/dockerfilegraph:0.0.0 \
            --output png \
            --dpi 200

      - name: Run the Docker image with --legend
        run: |
          cd example
          docker run \
            --workdir /workspace \
            --volume "$(pwd)":/workspace \
            ghcr.io/patrickhoefler/dockerfilegraph:0.0.0 \
            --legend

  native:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.17'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: go test ./...

      - name: Build
        run: go build

      - name: '[macOS] Install graphviz'
        if: runner.os == 'macOS'
        run: brew install graphviz

      - name: '[Ubuntu] Install graphviz'
        if: runner.os == 'Linux'
        run: sudo apt install --no-install-recommends -y graphviz

      - name: '[Windows] Install graphviz'
        if: runner.os == 'Windows'
        run: choco install graphviz --no-progress

      - name: Run the binary without flags
        run: cd example && ../dockerfilegraph

      - name: Run the binary with --help
        run: cd example && ../dockerfilegraph --help

      - name: Run the binary with -o pdf
        run: cd example && ../dockerfilegraph -o pdf

      - name: Run the binary with -o png
        run: cd example && ../dockerfilegraph -o png

      - name: Run the binary with --output png --dpi 200
        run: cd example && ../dockerfilegraph --output png --dpi 200

      - name: Run the binary with --legend
        run: cd example && ../dockerfilegraph --legend
